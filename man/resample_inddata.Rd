% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resample_inddata.R
\name{resample_inddata}
\alias{resample_inddata}
\title{Sample individual level data with joint effects matching a sim_mv object}
\usage{
resample_inddata(
  N,
  dat = NULL,
  genos = NULL,
  J = NULL,
  R_LD = NULL,
  af = NULL,
  sim_func = gen_genos_mvn,
  new_env_var = NULL,
  new_h2 = NULL,
  new_R_E = NULL,
  new_R_obs = NULL,
  calc_sumstats = FALSE
)
}
\arguments{
\item{N}{Sample size, scalar, vector, or special sample size format data frame, see details.}

\item{dat}{An object of class \code{sim_mv} (produced by \code{sim_mv}). If `dat` is omitted,
the function will generate a matrix of genotypes only. If `dat` is provided, phenotypes for the traits
in `dat` will also be included.}

\item{genos}{Optional matrix of pre-generated genotypes. If \code{genos} is supplied, \code{resample_inddata} will only generate phenotypes.}

\item{J}{Optional number of variants. \code{J} is only required if \code{dat} is missing.}

\item{R_LD}{LD pattern (optional). See \code{?sim_mv} for more details.}

\item{af}{Allele frequencies. \code{af} is required unless unless \code{genos} is supplied.}

\item{sim_func}{Function for generating genotype data. Default = gen_genos_mvn}

\item{new_env_var}{Optional. The environmental variance in the new population.
If missing the function will assume the environmental variance is the same as in the old population.}

\item{new_h2}{Optional. The heritability in the new population. Provide at most one of \code{new_env_var} and \code{new_h2}.}

\item{new_R_E}{Optional, specify environmental correlation in the new population.
If missing, the function will assume the environmental correlation is the same as in the original data.}

\item{new_R_obs}{Optional, specify overall trait correlation in the new population. Specify at most one of \code{new_R_E} or \code{new_R_obs}.
If missing, the function will assume the environmental correlation is the same as in the original data.}

\item{calc_sumstats}{If \code{TRUE}, associations between genotypes and phenotypes will be calculated and returned.}
}
\description{
Sample individual level data with joint effects matching a sim_mv object
}
\details{
This function can be used to generate individual level genotype and phenotype data. It can be used in three modes:

To generate genotype data only: No \code{sim_mv} object needs to be included. Supply only \code{N} as a single integer for the
number of individuals, \code{J} for the number of variants, \code{af}, and \code{R_LD} if desired. All other
parameters are not relevant if there is no phenotype, so if they are supplied, you will get an error. The returned object will include a
\code{N x J} matrix of genotypes and a vector of allele frequencies.

To generate both genotype and phenotype data: Supply \code{dat} (a \code{sim_mv} object) and leave \code{genos} missing. \code{N} and \code{af}
are required and all other options are optional.

To generate phenotype data only: Supply \code{dat} (a \code{sim_mv} object) and provide a matrix of genotypes to the \code{genos} argument. The number of
rows in \code{genos} must be equal to the total number of individuals implied by \code{N}.
So for example, if there are two traits with 10 samples each and no overlap, \code{genos}
should have 20 rows. The \code{R_LD} and \code{af} arguments should contain the population
LD and allele frequencies used to produce the genotypes. These are used to compute the genetic variance-covariance matrix.
\code{N} and \code{af} are required and all other options are optional.
}
\examples{
# Use resample_inddata to generate genotypes only
simple_ld <- matrix(0.5, nrow = 5, ncol = 5)
diag(simple_ld) <- 1
genos_only <- resample_inddata(N = 8,
                               J = 20,
                               R_LD = list(simple_ld),
                               af = rep(0.3, 5))
# generate genotypes and phenotypes
dat <- sim_mv(N = 0,
              G = 1,
              J = 20,
              pi = 0.5,
              h2 = 0.05,
              R_LD = list(simple_ld),
              af = rep(0.3, 5))
genos_and_phenos <- resample_inddata(dat = dat,
                                      N = 8,
                                      R_LD = list(simple_ld),
                                      af = rep(0.3, 5))
# generate phenos only
phenos_only <- resample_inddata(dat = dat,
                                genos = genos_only$X,
                                N = 8,
                                R_LD = list(simple_ld),
                                af = rep(0.3, 5))
}
